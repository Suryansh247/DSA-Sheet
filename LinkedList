import java.util.*;
public class LinkedList {
    public static class Node {
        int data;
        Node next;
        public Node(int data){
            this.data = data;
            this.next = null;
        }
        
    }
    public static Node head;
    public static Node tail;
    public static int size;
    public void addFirst(int data){
        Node newNode = new Node(data);
        if(head==null){
            head=tail=newNode;
            return;
        }
        newNode.next = head;
        head = newNode;
        size++;
    }
    public void addLast(int data){
        Node newNode = new Node(data);
        if(head==null){
            head=tail=newNode;
            return;
        }
        tail.next = newNode;
        tail= newNode;
        size++;
    }
    public void addMiddle(int idx,int data){
        Node newNode = new Node(data);
        if(idx==0){
            addFirst(data);
            return;
        }
        Node temp = head;
        int i=0;
        while(i<idx-1){ //taking us to the previous node of the targettting node
            temp=temp.next;
            i++;
        }
        newNode.next = temp.next;
        temp.next = newNode;
        size++;
    }
    public int removeFirst(){
        if(size==0){
            System.out.println("LL is Empty");
                return Integer.MIN_VALUE;
            } else if (size==1){
                int val = head.data;
                head = tail = null;
                size=0;
                return val;
            }

        int val=head.data;
        head=head.next;
        size--;
        return val;
    }
    public int removeLast(){
        if(size==0){
            System.out.println("LL is Empty");
                return Integer.MIN_VALUE;
            } else if (size==1){
                int val = head.data;
                head = tail = null;
                size=0;
                return val;
            }
            Node prev = head;
            while(prev.next!=tail){
                prev = prev.next;
            }
            int val = tail.data;
            prev.next=null;
            tail=prev;
            size--;
            return val;
    }
    public static void printing(){
        Node temp = head;
        while(temp!=null){
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }
    public static void main(String[] args){
        LinkedList ll = new LinkedList();
        ll.addFirst(2);
        ll.addFirst(1);
        ll.addLast(4);
        ll.addLast(5);
        ll.addMiddle(2, 3);
        ll.removeLast();
        ll.removeFirst();
        printing();
        System.out.println(ll.size);
    }
}
